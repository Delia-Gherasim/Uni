G = ({Program, Declaration, StatementList, Statement, ComplicatedStatement, SimpleStatement, AssignStatement, IoStatement, IfStatement, ForStatement, FunctionStatement, ArgumentsList, ResultValue, Condition, Expression, Term, Factor, Relation, Const, Type, Identifier}, {if, a,  for, function, read, write,  ( ,  ) ,  [ ,  ] ,  : ,  ; , =,  true ,  false ,  + ,  - ,  * ,  / ,  > ,  < ,  == ,  >= ,  <= ,  <> , number,  word ,  character }, P, Program)
P:
Program -> Declaration | Statement
Declaration -> Identifier  :  Type
StatementList -> Statement | Statement  ;  StatementList
Statement -> SimpleStatement | ComplicatedStatement | AssignStatement
AssignStatement -> Identifier  =  Expression
IoStatement ->   read ( Identifier ) | write   (  Identifier  ) 
IfStatement ->  if     Condition     [  StatementList  ]  [ else   [  StatementList  ] ]
ForStatement ->  for   (  Condition  ;  Condition  ;  Condition  )   [  StatementList  ] 
Condition -> Expression Relation Expression
Expression ->  Term Factor | Term
Term ->  Factor
Factor -> Identifier | Const 
Relation ->  >  |  <  |  ==  |  >=  |  <=  |  <> 
Const ->  number  |  word  |  character 
Type ->  number  |  word  |  character  |  struct 
Identifier ->  a 