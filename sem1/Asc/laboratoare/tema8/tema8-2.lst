     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit               
     5                                  import exit msvcrt.dll
     6                                  extern printf
     7                                  import printf msvcrt.dll
     8                                  extern fopen
     9                                  import fopen msvcrt.dll
    10                                  
    11                                  ;A text file is given. Read the content of the file, count the number of even digits and display the result on the screen. The name of text file is defined in the data segment.
    12                                  segment data use32 class=data
    13 00000000 696E7075742E747874-         file_in db "input.txt",0
    13 00000009 00                 
    14 0000000A 7200                        fr db "r", 0 
    15 0000000C 00000000                    f dd 0
    16 00000010 00                          count db 0
    17 00000011 <res 00000004>              n resd 1
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 BB[10000000]                    mov ebx, count
    23 00000005 68[0A000000]                    push fr
    24 0000000A 68[00000000]                    push file_in
    25 0000000F FF15[00000000]                  call [fopen]
    26 00000015 83C408                          add esp, 4*2
    27 00000018 85C0                            test eax, eax
    28 0000001A 741A                            jz afiseaza
    29                                          repeta:
    30 0000001C 7B01                                jpo next
    31 0000001E 43                                  inc ebx
    32                                              next:
    33 0000001F 68[0A000000]                            push fr
    34 00000024 68[00000000]                            push file_in
    35 00000029 FF15[00000000]                          call [fopen]
    36 0000002F 83C408                                  add esp, 4*2
    37 00000032 85C0                                    test eax, eax
    38 00000034 E2E6                            loop repeta
    39                                          afiseaza:
    40 00000036 53                              push ebx
    41 00000037 FF15[00000000]                  call [printf]
    42 0000003D 83C404                          add esp, 4      
    43                                        
    44                                          ; exit(0)
    45 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
